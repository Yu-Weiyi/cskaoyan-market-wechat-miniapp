<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="happy.coding.mapper.MarketNoticeAdminMapper">
  <resultMap id="BaseResultMap" type="happy.coding.bean.model.MarketNoticeAdmin">
    <!--@mbg.generated-->
    <!--@Table market_notice_admin-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="read_time" jdbcType="TIMESTAMP" property="readTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BOOLEAN" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, notice_id, notice_title, admin_id, read_time, add_time, update_time, deleted
  </sql>
  <select id="selectByExample" parameterType="happy.coding.bean.model.MarketNoticeAdminExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from market_notice_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from market_notice_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from market_notice_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="happy.coding.bean.model.MarketNoticeAdminExample">
    <!--@mbg.generated-->
    delete from market_notice_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="happy.coding.bean.model.MarketNoticeAdmin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into market_notice_admin (notice_id, notice_title, admin_id, 
      read_time, add_time, update_time, 
      deleted)
    values (#{noticeId,jdbcType=INTEGER}, #{noticeTitle,jdbcType=VARCHAR}, #{adminId,jdbcType=INTEGER}, 
      #{readTime,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleted,jdbcType=BOOLEAN})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="happy.coding.bean.model.MarketNoticeAdmin" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into market_notice_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="noticeTitle != null">
        notice_title,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="readTime != null">
        read_time,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeTitle != null">
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="happy.coding.bean.model.MarketNoticeAdminExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from market_notice_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update market_notice_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=INTEGER},
      </if>
      <if test="record.noticeTitle != null">
        notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null">
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.readTime != null">
        read_time = #{record.readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BOOLEAN},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update market_notice_admin
    set id = #{record.id,jdbcType=INTEGER},
      notice_id = #{record.noticeId,jdbcType=INTEGER},
      notice_title = #{record.noticeTitle,jdbcType=VARCHAR},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      read_time = #{record.readTime,jdbcType=TIMESTAMP},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BOOLEAN}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="happy.coding.bean.model.MarketNoticeAdmin">
    <!--@mbg.generated-->
    update market_notice_admin
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeTitle != null">
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="readTime != null">
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="happy.coding.bean.model.MarketNoticeAdmin">
    <!--@mbg.generated-->
    update market_notice_admin
    set notice_id = #{noticeId,jdbcType=INTEGER},
      notice_title = #{noticeTitle,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      read_time = #{readTime,jdbcType=TIMESTAMP},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>